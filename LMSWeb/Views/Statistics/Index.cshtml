@using LMSWeb.Models
@model Tuple<TestbedViewModel, EventTypeViewModel, EventTypeViewModel, DateSelectModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Session["userObjectId"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}
@{
    ViewBag.Title = "Index";
    @Styles.Render("~/Content/datepicker")
    @Scripts.Render("~/bundles/datePicker")
}

@section scripts{
    <script type="text/javascript">

        $('.FromDate').datepicker({
            //format: 'yyyy-MM-dd', //choose the date format you prefer
            format: 'yyyy-MM-dd',
            orientation: 'right bottom'
        });
        $('.TomDate').datepicker({
            //format: 'yyyy-MM-dd', //choose the date format you prefer
            //format: 'yyyy-MM-dd',
            format: 'yyyy-MM-dd',
            locale: 'sv',
            orientation: 'right bottom'
        });
    </script>
}

<h2>Statistics</h2>

@*<div id="statDiv" style="text-align:center; border:solid; height:400px; width:800px; display:inline-block; float:right">hjej</div>*@
@*@section RightSection{
    <text>this is rightsection</text>
}*@

<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function filterEvents() {
        var eventTypeId = $('#Item2_EventTypeId').val();

        $.ajax({
            url: 'Details',
            type: "GET",
            dataType: "JSON",
            data: { MasterEventId: eventTypeId },
            success: function (SubEventTypes) {
                $('#idSubEvent').html("");

                var jsondata = SubEventTypes;

                $.each(jsondata, function (i, item) {
                    $('#idSubEvent').append($('<option>', {
                        value: item.Value,
                        text: item.Text
                    }));
                });

            }
        })
    }

    function AllEventsSelected(element) {
        //element.checked ? alert('checked.') : alert('not checked');
        //allEvents.checked = element.checked ? true : false;
        var checked = element.checked ? true : false;
        $('#IsAllEvents').val(checked);
    }

</script>
@using (Html.BeginForm("RecieveForm", "Statistics", FormMethod.Post, new { returnUrl = this.Request.RawUrl }))
{
    @Html.Hidden("IsAllEvents", false);
    <div class="form-group">
        @Html.LabelFor(tuple => tuple.Item1.TestBedId, new { @class = "control-label" })

        @*@Html.DropDownListFor(tuple => tuple.Item1.TestBedId, (Model.Item1.ListofTestbeds), "--SELECT--");*@
        @Html.DropDownListFor(tuple => tuple.Item1.TestBedId, new SelectList(Model.Item1.ListofTestbeds, "Value", "Text"),
         "--SELECT--", new { @class = "form-control" })



    </div>

    <br />
    <br />
    <div class="form-group">

        @Html.LabelFor(tuple => tuple.Item2.EventTypeId);
        @Html.DropDownListFor(tuple => tuple.Item2.EventTypeId, new SelectList(Model.Item2.ListofEventTypes, "Value", "Text"),
         "--SELECT--",
         new { @class = "form-control", @onchange = "filterEvents();" })


    </div>


    <div class="form-inline">

        <select name="ddlSubEvent" class="form-control" id="idSubEvent">
            <option>--SUB-EVENTTYPE--</option>
        </select>


        @*@Html.DropDownListFor(m => m.Item2.EventTypeId, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"),
            "--SUB-EVENTTYPE--", new { @class = "form-control", @id = "idSubEvent" })*@

        @Html.CheckBox("chkSubEventTypes", false, new { @class = "control-label", onchange = "AllEventsSelected(this);" })
        @Html.Label("All subevents")

    </div>


    <br />

    @*<form class="col-12">
            <div class="form-row">
                <label class="col-sm-2 col-form-label" for="name">Name</label>
                <input type="text" class="form-control col-sm-10" name="name" id="name" [(ngModel)]="person.name" disabled />
            </div>
        </form>*@


    <div class="form-group input-group-sm">

        @Html.LabelFor(model => model.Item4.FromDate)
        @Html.TextBoxFor(model => model.Item4.FromDate, "{0:yyyy-MM-dd}", new { @class = "form-control FromDate " })



        @Html.LabelFor(model => model.Item4.TomDate)
        @Html.TextBoxFor(model => model.Item4.TomDate, "{0:yyyy-MM-dd}", new { @class = "form-control TomDate " })

    </div>

    <br />


    <div class="form-group input-group-sm">

        <form>
            <fieldset>
                <legend>Select grouping option</legend>
                @Html.RadioButton("group", "Year", false, new { @class = "control-label", @value = "1" }) Year<br />
                @Html.RadioButton("group", "Month", true, new { @class = "control-label", @value = "2" }) Month<br />
                @Html.RadioButton("group", "Week", false, new { @class = "control-label", @value = "3" }) Week<br />
                @Html.RadioButton("group", "Day", false, new { @class = "control-label", @value = "4" }) Day<br />
            </fieldset>
            <input type="submit" name="btnSubmit" id="idSubmit" class="form-control" />
        </form>





        <br />
        <br />



    </div>
   
}





